#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Wrapper script ƒë·ªÉ ch·∫°y Telegram Flow Bot v·ªõi encoding UTF-8
"""

import sys
import os

# Thi·∫øt l·∫≠p encoding UTF-8 cho Windows
if sys.platform == "win32":
    import codecs
    import locale
    
    # Thi·∫øt l·∫≠p locale
    try:
        locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
    except:
        try:
            locale.setlocale(locale.LC_ALL, 'C.UTF-8')
        except:
            pass
    
    # Thi·∫øt l·∫≠p stdout/stderr v·ªõi UTF-8
    if hasattr(sys.stdout, 'detach'):
        sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
    if hasattr(sys.stderr, 'detach'):
        sys.stderr = codecs.getwriter("utf-8")(sys.stderr.detach())

# Import v√† ch·∫°y main script
try:
    from telegram_flow import main
    import asyncio
    
    print("üöÄ Starting Telegram Flow Bot...")
    print("üì± Make sure you have configured config.json")
    print("üí° Send /filter message to your personal chat to start")
    print("=" * 50)
    
    # Ch·∫°y bot
    if __name__ == "__main__":
        try:
            asyncio.run(main())
        except KeyboardInterrupt:
            print("\nüõë Bot stopped by user (Ctrl+C)")
        except AttributeError:
            # Fallback cho Python 3.7 c≈©
            try:
                loop = asyncio.get_event_loop()
                loop.run_until_complete(main())
            except KeyboardInterrupt:
                print("\nüõë Bot stopped by user (Ctrl+C)")
            
except ImportError as e:
    print(f"‚ùå Import error: {e}")
    print("Make sure telegram_flow.py is in the same directory")
    input("Press Enter to exit...")
except Exception as e:
    print(f"‚ùå Error: {e}")
    input("Press Enter to exit...")
